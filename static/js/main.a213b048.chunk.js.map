{"version":3,"sources":["Generator.js","App.js","reportWebVitals.js","index.js"],"names":["Generator","props","state","nGen","dimension","squareSize","spacing","glyphsPerRow","handleChange","bind","handleSubmit","n","Math","floor","random","event","this","setState","target","value","context","boardTopx","boardTopy","i","j","fillStyle","xOffset","yOffset","fillRect","val","fillCell","fillUpperLeft","genRandomNumber","fillUpperRight","fillLowerLeft","fillLowerRight","fillCrossUp","fillCrossRight","fillCrossDown","fillCrossLeft","canvas","document","getElementById","getContext","clearRect","width","height","generateGlyph","preventDefault","href","rel","onSubmit","type","min","max","onChange","id","React","Component","App","className","bannerColor","octoColor","size","direction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a213b048.chunk.js","sourcesContent":["import React from 'react';\n\nclass Generator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nGen: 0\n    };\n    this.dimension = 5;\n    this.squareSize = 12;\n    this.spacing = this.squareSize * this.dimension + 20;\n    this.glyphsPerRow = 11;\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  genRandomNumber(n) {\n    return Math.floor((Math.random() * n) + 1);\n  }\n\n  handleChange(event) {\n    this.setState({ nGen: event.target.value });\n  }\n\n  fillCell(context, boardTopx, boardTopy, i, j) {\n    context.fillStyle = \"black\";\n    let xOffset = boardTopx + j * this.squareSize;\n    let yOffset = boardTopy + i * this.squareSize;\n    context.fillRect(xOffset, yOffset, this.squareSize, this.squareSize);\n  }\n\n  fillUpperLeft(val, context, boardTopx, boardTopy) {\n    this.fillCell(context, boardTopx, boardTopy, 0, 0);\n    switch (val) {\n      case 1:\n        this.fillCell(context, boardTopx, boardTopy, 0, 1);\n        this.fillCell(context, boardTopx, boardTopy, 0, 2);\n        break;\n      case 2:\n        this.fillCell(context, boardTopx, boardTopy, 1, 0);\n        this.fillCell(context, boardTopx, boardTopy, 2, 0);\n        break;\n      case 3:\n        this.fillCell(context, boardTopx, boardTopy, 0, 1);\n        this.fillCell(context, boardTopx, boardTopy, 0, 2);\n        this.fillCell(context, boardTopx, boardTopy, 1, 0);\n        this.fillCell(context, boardTopx, boardTopy, 2, 0);\n        break;\n      default:\n    }\n  }\n\n  fillUpperRight(val, context, boardTopx, boardTopy) {\n    this.fillCell(context, boardTopx, boardTopy, 0, 4);\n    switch (val) {\n      case 1:\n        this.fillCell(context, boardTopx, boardTopy, 0, 3);\n        this.fillCell(context, boardTopx, boardTopy, 0, 2);\n        break;\n      case 2:\n        this.fillCell(context, boardTopx, boardTopy, 1, 4);\n        this.fillCell(context, boardTopx, boardTopy, 2, 4);\n        break;\n      case 3:\n        this.fillCell(context, boardTopx, boardTopy, 0, 3);\n        this.fillCell(context, boardTopx, boardTopy, 0, 2);\n        this.fillCell(context, boardTopx, boardTopy, 1, 4);\n        this.fillCell(context, boardTopx, boardTopy, 2, 4);\n        break;\n      default:\n    }\n  }\n\n  fillLowerLeft(val, context, boardTopx, boardTopy) {\n    this.fillCell(context, boardTopx, boardTopy, 4, 0);\n    switch (val) {\n      case 1:\n        this.fillCell(context, boardTopx, boardTopy, 4, 1);\n        this.fillCell(context, boardTopx, boardTopy, 4, 2);\n        break;\n      case 2:\n        this.fillCell(context, boardTopx, boardTopy, 3, 0);\n        this.fillCell(context, boardTopx, boardTopy, 2, 0);\n        break;\n      case 3:\n        this.fillCell(context, boardTopx, boardTopy, 4, 1);\n        this.fillCell(context, boardTopx, boardTopy, 4, 2);\n        this.fillCell(context, boardTopx, boardTopy, 3, 0);\n        this.fillCell(context, boardTopx, boardTopy, 2, 0);\n        break;\n      default:\n    }\n  }\n\n  fillLowerRight(val, context, boardTopx, boardTopy) {\n    this.fillCell(context, boardTopx, boardTopy, 4, 4);\n    switch (val) {\n      case 1:\n        this.fillCell(context, boardTopx, boardTopy, 4, 3);\n        this.fillCell(context, boardTopx, boardTopy, 4, 2);\n        break;\n      case 2:\n        this.fillCell(context, boardTopx, boardTopy, 3, 4);\n        this.fillCell(context, boardTopx, boardTopy, 2, 4);\n        break;\n      case 3:\n        this.fillCell(context, boardTopx, boardTopy, 4, 3);\n        this.fillCell(context, boardTopx, boardTopy, 4, 2);\n        this.fillCell(context, boardTopx, boardTopy, 3, 4);\n        this.fillCell(context, boardTopx, boardTopy, 2, 4);\n        break;\n      default:\n    }\n  }\n\n  fillCrossUp(val, context, boardTopx, boardTopy) {\n    if (val === 2) {\n      this.fillCell(context, boardTopx, boardTopy, 0, 2);\n      this.fillCell(context, boardTopx, boardTopy, 1, 2);\n      this.fillCell(context, boardTopx, boardTopy, 2, 2);\n    }\n  }\n\n  fillCrossRight(val, context, boardTopx, boardTopy) {\n    if (val === 2) {\n      this.fillCell(context, boardTopx, boardTopy, 2, 4);\n      this.fillCell(context, boardTopx, boardTopy, 2, 3);\n      this.fillCell(context, boardTopx, boardTopy, 2, 2);\n    }\n  }\n\n  fillCrossDown(val, context, boardTopx, boardTopy) {\n    if (val === 2) {\n      this.fillCell(context, boardTopx, boardTopy, 4, 2);\n      this.fillCell(context, boardTopx, boardTopy, 3, 2);\n      this.fillCell(context, boardTopx, boardTopy, 2, 2);\n    }\n  }\n\n  fillCrossLeft(val, context, boardTopx, boardTopy) {\n    if (val === 2) {\n      this.fillCell(context, boardTopx, boardTopy, 2, 0);\n      this.fillCell(context, boardTopx, boardTopy, 2, 1);\n      this.fillCell(context, boardTopx, boardTopy, 2, 2);\n    }\n  }\n\n  generateGlyph(context, boardTopx, boardTopy) {\n    //each corner\n    this.fillUpperLeft(this.genRandomNumber(3), context, boardTopx, boardTopy);\n    this.fillUpperRight(this.genRandomNumber(3), context, boardTopx, boardTopy);\n    this.fillLowerLeft(this.genRandomNumber(3), context, boardTopx, boardTopy);\n    this.fillLowerRight(this.genRandomNumber(3), context, boardTopx, boardTopy);\n\n    //each arm of the middle cross\n    this.fillCrossUp(this.genRandomNumber(2), context, boardTopx, boardTopy);\n    this.fillCrossRight(this.genRandomNumber(2), context, boardTopx, boardTopy);\n    this.fillCrossDown(this.genRandomNumber(2), context, boardTopx, boardTopy);\n    this.fillCrossLeft(this.genRandomNumber(2), context, boardTopx, boardTopy);\n  }\n\n  handleSubmit(event) {\n    let boardTopx = 0;\n    let boardTopy = 0;\n\n    let canvas = document.getElementById(\"canvasChessboard\");\n    let context = canvas.getContext(\"2d\");\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    for (let n = 0; n < this.state.nGen; n++) {\n      boardTopx = (n % this.glyphsPerRow) * this.spacing;\n      boardTopy = Math.floor(n / this.glyphsPerRow) * this.spacing;\n      this.generateGlyph(context, boardTopx, boardTopy);\n    }\n\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Glyph Generating Idea (Adapted from user Oshimimers)</h3>\n        <h4><a href=\"https://www.reddit.com/r/neography/comments/caev1r/i_programmed_my_calculator_to_generate_random/\"\n          target=\"_blank\" rel=\"noreferrer\">(Link to original reddit post)</a></h4>\n        \n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Number of Glyphs:\n            <input type=\"number\" value={this.state.nGen} min={0} max={407} onChange={this.handleChange} />\n          </label>\n          <input type=\"submit\" value=\"Generate!\" />\n        </form>\n        <br></br>\n        <canvas id=\"canvasChessboard\" width=\"900px\" height=\"3000px\"></canvas>\n      </div>\n    );\n  }\n}\n\nexport default Generator;","import './App.css';\nimport GithubCorner from 'react-github-corner';\nimport Generator from './Generator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GithubCorner\n        href={\"https://github.com/Scorupa/neography\"}\n        bannerColor=\"#C44A41\"\n        octoColor=\"#fff\"\n        size={80}\n        direction=\"left\"\n      />\n      <Generator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}